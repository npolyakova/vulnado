name: DefectDojo Publish SAST Results
on: 
  workflow_dispatch:

env:
  DEFECTDOJO_SCAN_MINIMUM_SEVERITY: "Info"
  DEFECTDOJO_SCAN_ACTIVE: "true"
  DEFECTDOJO_SCAN_VERIFIED: "true"
  DEFECTDOJO_SCAN_CLOSE_OLD_FINDINGS: "true"
  DEFECTDOJO_SCAN_PUSH_TO_JIRA: "false"
  DEFECTDOJO_SCAN_ENVIRONMENT: "Default"
  DEFECTDOJO_ANCHORE_DISABLE: "false"
  DEFECTDOJO_SCAN_TEST_TYPE: "GitHub-Actions Spotbugs"
  DEFECTDOJO_NOT_ON_MASTER: "false"

jobs:
  publish_sast:
    runs-on: ubuntu-latest
    needs: [create_engagement]  # Assuming create_engagement is the job name from previous workflow
    if: |
      env.DEFECTDOJO_NOT_ON_MASTER != 'true' || github.ref != 'refs/heads/master' &&
      !contains(env.SAST_EXCLUDED_ANALYZERS, 'spotbugs') &&
      !(contains(env.SAST_DEFAULT_ANALYZERS, 'mobsf') && 
        env.SAST_EXPERIMENTAL_FEATURES == 'true' &&
        exists('**/AndroidManifest.xml')) &&
      env.SAST_DISABLED != 'true' &&
      contains(env.SAST_DEFAULT_ANALYZERS, 'spotbugs') &&
      (exists('**/*.groovy') || exists('**/*.java') || exists('**/*.scala'))
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl coreutils
          
      - name: Set date variable
        run: echo "TODAY=$(date +%Y-%m-%d)" >> $GITHUB_ENV
        
      - name: Find SpotBugs report file
        id: find_report
        run: |
          REPORT_FILE=$(find . -name "*spotbugs*" -o -name "*sast*" | head -1)
          echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV
          echo "Using report file: $REPORT_FILE"
          
      - name: Upload SAST results to DefectDojo
        if: env.REPORT_FILE != ''
        run: |
          curl --fail --location --request POST "$DEFECTDOJO_URL/import-scan/" \
            --header "Authorization: Token $DEFECTDOJO_TOKEN" \
            --form "scan_date=\"${{ env.TODAY }}\"" \
            --form "minimum_severity=\"${{ env.DEFECTDOJO_SCAN_MINIMUM_SEVERITY }}\"" \
            --form "active=\"${{ env.DEFECTDOJO_SCAN_ACTIVE }}\"" \
            --form "verified=\"${{ env.DEFECTDOJO_SCAN_VERIFIED }}\"" \
            --form "scan_type=\"${{ env.DEFECTDOJO_SCAN_TYPE }}\"" \
            --form "engagement=\"${{ env.DEFECTDOJO_ENGAGEMENTID }}\"" \
            --form "file=@${{ env.REPORT_FILE }}" \
            --form "close_old_findings=\"${{ env.DEFECTDOJO_SCAN_CLOSE_OLD_FINDINGS }}\"" \
            --form "push_to_jira=\"${{ env.DEFECTDOJO_SCAN_PUSH_TO_JIRA }}\"" \
            --form "test_type=\"${{ env.DEFECTDOJO_SCAN_TEST_TYPE }}\"" \
            --form "environment=\"${{ env.DEFECTDOJO_SCAN_ENVIRONMENT }}\""
